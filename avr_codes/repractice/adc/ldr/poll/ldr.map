Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                              ldr.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              ldr.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              ldr.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

l_data              0x1               ldr.o
m_data              0x2               ldr.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
LOAD ldr.o
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x35a
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000ae       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ae                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000be        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
 *(.init9)
 *(.text)
 .text          0x00000000000000c6        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
                0x00000000000000c6                __vector_22
                0x00000000000000c6                __vector_28
                0x00000000000000c6                __vector_1
                0x00000000000000c6                __vector_32
                0x00000000000000c6                __vector_34
                0x00000000000000c6                __vector_24
                0x00000000000000c6                __vector_12
                0x00000000000000c6                __bad_interrupt
                0x00000000000000c6                __vector_6
                0x00000000000000c6                __vector_31
                0x00000000000000c6                __vector_3
                0x00000000000000c6                __vector_23
                0x00000000000000c6                __vector_30
                0x00000000000000c6                __vector_25
                0x00000000000000c6                __vector_11
                0x00000000000000c6                __vector_13
                0x00000000000000c6                __vector_17
                0x00000000000000c6                __vector_19
                0x00000000000000c6                __vector_7
                0x00000000000000c6                __vector_27
                0x00000000000000c6                __vector_5
                0x00000000000000c6                __vector_33
                0x00000000000000c6                __vector_4
                0x00000000000000c6                __vector_9
                0x00000000000000c6                __vector_2
                0x00000000000000c6                __vector_21
                0x00000000000000c6                __vector_15
                0x00000000000000c6                __vector_29
                0x00000000000000c6                __vector_8
                0x00000000000000c6                __vector_26
                0x00000000000000c6                __vector_14
                0x00000000000000c6                __vector_10
                0x00000000000000c6                __vector_16
                0x00000000000000c6                __vector_18
                0x00000000000000c6                __vector_20
 .text          0x00000000000000ca      0x264 ldr.o
                0x00000000000000ca                uart1_init
                0x00000000000000ea                uart1_tx_char
                0x00000000000000f8                uart1_tx_str
                0x0000000000000120                uart1_tx_num
                0x0000000000000192                uart1_rx_char
                0x00000000000001a0                uart1_rx_str
                0x00000000000001ea                uart1_rx_num
                0x00000000000002a2                adc1_init
                0x00000000000002c0                adc2_init
                0x00000000000002de                ldr_read
                0x0000000000000308                main
 .text          0x000000000000032e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x000000000000032e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x000000000000032e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000032e        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000032e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000032e       0x28 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                0x000000000000032e                __udivmodhi4
 .text.libgcc   0x0000000000000356        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000356        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000356        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000356                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000356        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x0000000000000356                exit
                0x0000000000000356                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000356        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000035a                _etext = .

.data           0x0000000000800100        0x4 load address 0x000000000000035a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
 .data          0x0000000000800100        0x3 ldr.o
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800103        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800104                . = ALIGN (0x2)
 *fill*         0x0000000000800103        0x1 00
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end, .)

.bss            0x0000000000800104        0x3
                0x0000000000800104                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
 .bss           0x0000000000800104        0x0 ldr.o
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800104        0x3 ldr.o
                0x0000000000800104                l_data
                0x0000000000800105                m_data
                0x0000000000800107                PROVIDE (__bss_end, .)
                0x000000000000035a                __data_load_start = LOADADDR (.data)
                0x000000000000035e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800107        0x0
                0x0000000000800107                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800107                PROVIDE (__noinit_end, .)
                0x0000000000800107                _end = .
                0x0000000000800107                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 ldr.o

.debug_pubnames
                0x0000000000000000       0xd1
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0xd1 ldr.o

.debug_info     0x0000000000000000      0x348
 *(.debug_info)
 .debug_info    0x0000000000000000      0x348 ldr.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x1cf
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1cf ldr.o

.debug_line     0x0000000000000000      0x371
 *(.debug_line)
 .debug_line    0x0000000000000000      0x371 ldr.o

.debug_frame    0x0000000000000000       0xc0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xc0 ldr.o

.debug_str      0x0000000000000000      0x179
 *(.debug_str)
 .debug_str     0x0000000000000000      0x179 ldr.o
                                        0x1b7 (size before relaxing)

.debug_loc      0x0000000000000000      0x1bb
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x1bb ldr.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ldr.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x0000000000000000       0x38
 .debug_pubtypes
                0x0000000000000000       0x38 ldr.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__bss_end                                         /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                                                  ldr.o
__do_copy_data                                    /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                                                  ldr.o
__heap_end                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__init                                            /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__stack                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                                                  ldr.o
__vector_1                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_10                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_11                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_12                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_13                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_14                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_15                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_16                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_17                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_18                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_19                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_2                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_20                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_21                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_22                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_23                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_24                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_25                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_26                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_27                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_28                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_29                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_3                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_30                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_31                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_32                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_33                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_34                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_4                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_5                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_6                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_7                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_8                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_9                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vector_default                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
__vectors                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
_exit                                             /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
adc1_init                                         ldr.o
adc2_init                                         ldr.o
exit                                              /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
l_data                                            ldr.o
ldr_read                                          ldr.o
m_data                                            ldr.o
main                                              ldr.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm64.o
uart1_init                                        ldr.o
uart1_rx_char                                     ldr.o
uart1_rx_num                                      ldr.o
uart1_rx_str                                      ldr.o
uart1_tx_char                                     ldr.o
uart1_tx_num                                      ldr.o
uart1_tx_str                                      ldr.o
