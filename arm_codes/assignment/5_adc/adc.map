
Memory Configuration

Name             Origin             Length             Attributes
ROM              0x00000000         0x00080000         xr
RAM              0x40000000         0x00008000         rw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD crt0.o
LOAD startup.o
LOAD VIClowlevel.o
LOAD adc.o
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libm.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/libgcc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/libgcc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libg.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/libgcc.a
                0x00000400                STACK_SIZE = 0x400

.text           0x00000000      0x8f0
 *(.init)
 .init          0x00000000      0x13c crt0.o
                0x00000114                reset
                0x00000000                _boot
                0x00000050                _mainCRTStartup
                0x00000114                abort
                0x00000050                _start
                0x00000114                _reset
                0x00000114                exit
                0x00000050                start
 *(.text .text.*)
 .text          0x0000013c       0xe4 startup.o
                0x00000148                UNDEF_Routine
                0x00000168                sys_init
                0x00000144                SWI_Routine
                0x000001f0                _sbrk_r
                0x00000140                FIQ_Routine
                0x0000013c                IRQ_Routine
 .text          0x00000220       0x3c VIClowlevel.o
                0x00000240                restoreIRQ
                0x00000220                enableIRQ
                0x00000230                disableIRQ
 .text          0x0000025c      0x694 adc.o
                0x00000384                uart0_tx_num
                0x000008ac                lcd2148_gotoxy1
                0x00000328                uart0_tx_char
                0x0000042c                uart0_rx_str
                0x00000730                lcd2148_string
                0x0000029c                adc_read
                0x0000046c                uart0_rx_num
                0x000002c8                uart0_init
                0x000005b4                lcd2148_init
                0x000008b8                lcd2148_gotoxy2
                0x000008c4                main
                0x00000350                uart0_tx_str
                0x00000488                delay
                0x0000025c                adc_init
                0x000006c0                lcd2148_data
                0x000004fc                latch
                0x000007f4                lcd2148_showvalue
                0x00000404                uart0_rx_char
                0x00000544                lcd2148_cmd
 *(.gnu.linkonce.t.*)
 *(.glue_7)
 *(.glue_7t)
 *(.gcc_except_table)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r.*)
                0x000008f0                . = ALIGN (0x4)

.ctors          0x000008f0        0x0
                0x000008f0                PROVIDE (__ctors_start__, .)
 *(SORT(.ctors.*))
 *(.ctors)
                0x000008f0                PROVIDE (__ctors_end__, .)

.dtors          0x000008f0        0x0
                0x000008f0                PROVIDE (__dtors_start__, .)
 *(SORT(.dtors.*))
 *(.dtors)
                0x000008f0                PROVIDE (__dtors_end__, .)
                0x000008f0                . = ALIGN (0x4)
                0x000008f0                _etext = .
                0x000008f0                PROVIDE (etext, .)

.data           0x40000000        0x0 load address 0x000008f0
                0x40000000                _data = .
 *(.data)
 *(.data.*)
 *(.gnu.linkonce.d*)
                0x40000000                . = ALIGN (0x4)
 *(.fastrun)
                0x40000000                . = ALIGN (0x4)
                0x40000000                _edata = .
                0x40000000                PROVIDE (edata, .)

.bss            0x40000000        0x4
                0x40000000                __bss_start = .
                0x40000000                __bss_start__ = .
 *(.bss)
 .bss           0x40000000        0x4 startup.o
 *(.gnu.linkonce.b*)
 *(COMMON)
                0x40000004                . = ALIGN (0x4)
                0x40000004                . = ALIGN (0x4)
                0x40000004                __bss_end__ = .
                0x40000004                PROVIDE (__bss_end, .)

.stack          0x40000100      0x400
                0x40000500                . = (. + STACK_SIZE)
 *fill*         0x40000100      0x400 00
                0x40000500                PROVIDE (_stack, .)
                0x40000500                _end = .
                0x40000500                PROVIDE (end, .)

.stab           0x00000000     0x1b18
 *(.stab)
 .stab          0x00000000      0x378 crt0.o
 .stab          0x00000378      0x84c startup.o
                                0x858 (size before relaxing)
 .stab          0x00000bc4      0x360 VIClowlevel.o
                                0x36c (size before relaxing)
 .stab          0x00000f24      0xbf4 adc.o
                                0xc18 (size before relaxing)

.stabstr        0x00000000     0x1c4e
 *(.stabstr)
 .stabstr       0x00000000     0x1c4e crt0.o
                                  0x0 (size before relaxing)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x10 startup.o
 .comment       0x00000010       0x10 VIClowlevel.o
 .comment       0x00000020       0x10 adc.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)
OUTPUT(adc.elf elf32-littlearm)

Cross Reference Table

Symbol                                            File
FIQ_Routine                                       startup.o
IRQ_Routine                                       startup.o
SWI_Routine                                       startup.o
UNDEF_Routine                                     startup.o
__bss_end__                                       crt0.o
__bss_start                                       crt0.o
__ctors_end__                                     crt0.o
__ctors_start__                                   crt0.o
_boot                                             crt0.o
_data                                             crt0.o
_edata                                            crt0.o
_etext                                            crt0.o
_mainCRTStartup                                   crt0.o
_reset                                            crt0.o
_sbrk_r                                           startup.o
_stack                                            crt0.o
_start                                            crt0.o
abort                                             crt0.o
adc_init                                          adc.o
adc_read                                          adc.o
delay                                             adc.o
disableIRQ                                        VIClowlevel.o
enableIRQ                                         VIClowlevel.o
end                                               startup.o
exit                                              crt0.o
latch                                             adc.o
lcd2148_cmd                                       adc.o
lcd2148_data                                      adc.o
lcd2148_gotoxy1                                   adc.o
lcd2148_gotoxy2                                   adc.o
lcd2148_init                                      adc.o
lcd2148_showvalue                                 adc.o
lcd2148_string                                    adc.o
main                                              adc.o
                                                  crt0.o
reset                                             crt0.o
restoreIRQ                                        VIClowlevel.o
start                                             crt0.o
sys_init                                          startup.o
                                                  adc.o
uart0_init                                        adc.o
uart0_rx_char                                     adc.o
uart0_rx_num                                      adc.o
uart0_rx_str                                      adc.o
uart0_tx_char                                     adc.o
uart0_tx_num                                      adc.o
uart0_tx_str                                      adc.o
