Archive member included because of file (symbol)

/usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)
                              switch_2.o (strcmp)

Memory Configuration

Name             Origin             Length             Attributes
ROM              0x00000000         0x00080000         xr
RAM              0x40000000         0x00008000         rw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD crt0.o
LOAD startup.o
LOAD switch_2.o
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libm.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/libgcc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/libgcc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libg.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a
LOAD /usr/local/lib/gcc-lib/arm-elf/3.3/libgcc.a
                0x00000400                STACK_SIZE = 0x400

.text           0x00000000      0x584
 *(.init)
 .init          0x00000000      0x13c crt0.o
                0x00000114                reset
                0x00000000                _boot
                0x00000050                _mainCRTStartup
                0x00000114                abort
                0x00000050                _start
                0x00000114                _reset
                0x00000114                exit
                0x00000050                start
 *(.text .text.*)
 .text          0x0000013c       0xe4 startup.o
                0x00000148                UNDEF_Routine
                0x00000168                sys_init
                0x00000144                SWI_Routine
                0x000001f0                _sbrk_r
                0x00000140                FIQ_Routine
                0x0000013c                IRQ_Routine
 .text          0x00000220      0x278 switch_2.o
                0x000002dc                uart0_tx_num
                0x00000280                uart0_tx_char
                0x00000384                uart0_rx_str
                0x000003c4                uart0_rx_num
                0x00000220                uart0_init
                0x000003e0                main
                0x000002a8                uart0_tx_str
                0x0000035c                uart0_rx_char
 .text          0x00000498       0xc0 /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)
                0x00000498                strcmp
 *(.gnu.linkonce.t.*)
 *(.glue_7)
 *(.glue_7t)
 *(.gcc_except_table)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.4
                0x00000558       0x2c switch_2.o
                                 0x3c (size before relaxing)
 *(.gnu.linkonce.r.*)
                0x00000584                . = ALIGN (0x4)

.ctors          0x00000584        0x0
                0x00000584                PROVIDE (__ctors_start__, .)
 *(SORT(.ctors.*))
 *(.ctors)
                0x00000584                PROVIDE (__ctors_end__, .)

.dtors          0x00000584        0x0
                0x00000584                PROVIDE (__dtors_start__, .)
 *(SORT(.dtors.*))
 *(.dtors)
                0x00000584                PROVIDE (__dtors_end__, .)
                0x00000584                . = ALIGN (0x4)
                0x00000584                _etext = .
                0x00000584                PROVIDE (etext, .)

.data           0x40000000        0x0 load address 0x00000584
                0x40000000                _data = .
 *(.data)
 *(.data.*)
 *(.gnu.linkonce.d*)
                0x40000000                . = ALIGN (0x4)
 *(.fastrun)
                0x40000000                . = ALIGN (0x4)
                0x40000000                _edata = .
                0x40000000                PROVIDE (edata, .)

.bss            0x40000000        0x4
                0x40000000                __bss_start = .
                0x40000000                __bss_start__ = .
 *(.bss)
 .bss           0x40000000        0x4 startup.o
 *(.gnu.linkonce.b*)
 *(COMMON)
                0x40000004                . = ALIGN (0x4)
                0x40000004                . = ALIGN (0x4)
                0x40000004                __bss_end__ = .
                0x40000004                PROVIDE (__bss_end, .)

.stack          0x40000100      0x400
                0x40000500                . = (. + STACK_SIZE)
 *fill*         0x40000100      0x400 00
                0x40000500                PROVIDE (_stack, .)
                0x40000500                _end = .
                0x40000500                PROVIDE (end, .)

.stab           0x00000000     0x1260
 *(.stab)
 .stab          0x00000000      0x378 crt0.o
 .stab          0x00000378      0x84c startup.o
                                0x858 (size before relaxing)
 .stab          0x00000bc4      0x69c switch_2.o
                                0x99c (size before relaxing)

.stabstr        0x00000000     0x1b86
 *(.stabstr)
 .stabstr       0x00000000     0x1b86 crt0.o
                                  0x0 (size before relaxing)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x10 startup.o
 .comment       0x00000010       0x10 switch_2.o
 .comment       0x00000020       0x10 /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug_pubnames
                0x00000000       0x1d
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1d /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug_info     0x00000000      0x919
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x919 /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug_abbrev   0x00000000      0x16c
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x16c /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug_line     0x00000000      0x10f
 *(.debug_line)
 .debug_line    0x00000000      0x10f /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug_frame    0x00000000       0x20
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)

.debug_str      0x00000000      0x412
 *(.debug_str)
 .debug_str     0x00000000      0x412 /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)
                                0x44c (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)
OUTPUT(switch_2.elf elf32-littlearm)

Cross Reference Table

Symbol                                            File
FIQ_Routine                                       startup.o
IRQ_Routine                                       startup.o
SWI_Routine                                       startup.o
UNDEF_Routine                                     startup.o
__bss_end__                                       crt0.o
__bss_start                                       crt0.o
__ctors_end__                                     crt0.o
__ctors_start__                                   crt0.o
_boot                                             crt0.o
_data                                             crt0.o
_edata                                            crt0.o
_etext                                            crt0.o
_mainCRTStartup                                   crt0.o
_reset                                            crt0.o
_sbrk_r                                           startup.o
_stack                                            crt0.o
_start                                            crt0.o
abort                                             crt0.o
end                                               startup.o
exit                                              crt0.o
main                                              switch_2.o
                                                  crt0.o
reset                                             crt0.o
start                                             crt0.o
strcmp                                            /usr/local/lib/gcc-lib/arm-elf/3.3/../../../../arm-elf/lib/libc.a(strcmp.o)
                                                  switch_2.o
sys_init                                          startup.o
                                                  switch_2.o
uart0_init                                        switch_2.o
uart0_rx_char                                     switch_2.o
uart0_rx_num                                      switch_2.o
uart0_rx_str                                      switch_2.o
uart0_tx_char                                     switch_2.o
uart0_tx_num                                      switch_2.o
uart0_tx_str                                      switch_2.o
